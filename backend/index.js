// backend/index.js
//
// Punto de arranque del servidor Express.
// 1. Carga variables de entorno (.env)
// 2. Conecta a MongoDB Atlas (Mongoose)
// 3. Expone las rutas REST en /api
//

require('dotenv').config();          // Carga PORT y MONGO_URI

const express   = require('express');
const mongoose  = require('mongoose');
const morgan    = require('morgan'); // (opcional) logs HTTP legibles

//‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì  Configuraci√≥n b√°sica  ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì
const PORT = process.env.PORT      || 3000;
const URI  = process.env.MONGO_URI;               // ‚Üê sin fallback

if (!URI) {
  console.error('‚ùå  Falta la variable MONGO_URI en .env');
  process.exit(1);
}

//‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì  Arrancar Express  ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì
const app = express();

app.use(express.json());             // Body parser para JSON
app.use(morgan('dev'));              // Log de peticiones

// Ruta de salud sencilla

app.use('/api', require('./routes/universidad.routes'));

// Rutas de la API (versi√≥n 1)
app.use('/api', require('./routes/data.routes'));

//‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì  Conexi√≥n Mongo  ‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì
mongoose.connect(URI, {
  useNewUrlParser:    true,
  useUnifiedTopology: true,
  serverSelectionTimeoutMS: 10000,   // falla en 10 s si no conecta
})
.then(() => {
  console.log('‚úÖ  MongoDB conectado');
  app.listen(PORT, () =>
    console.log(`üöÄ  API escuchando en http://localhost:${PORT}`)
  );
})
.catch(err => {
  console.error('‚ùå  Error al conectar MongoDB:', err.message);
  process.exit(1);
});
